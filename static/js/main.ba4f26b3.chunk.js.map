{"version":3,"sources":["components/constants/PropTypes.js","components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["userShape","PropTypes","shape","id","number","name","string","email","adress","street","suite","city","isRequired","commentShape","body","User","arrayOf","userId","title","user","comments","postId","_ref","address","react_default","a","createElement","className","concat","Comment","comment","components_User_User","CommentList","map","components_Comment_Comment","key","Post","post","components_CommentList_CommentList","PostList","posts","components_Post_Post","POSTS_API_URL","COMMENTS_API_URL","USERS_API_URL","App","state","originalPosts","hasError","isLoading","isLoaded","inputValue","handleClick","_callee","_ref2","_ref3","postsResponse","usersResponse","commentsResponse","users","preparedPosts","regenerator_default","wrap","_context","prev","next","_this","setState","Promise","all","fetch","sent","Object","slicedToArray","json","_objectSpread","find","filter","t0","stop","handleInputFilter","_ref4","target","value","toConsumableArray","_ref5","includes","handleResetPosts","prevState","_this$state","this","Fragment","length","type","onChange","components_PostList_PostList","onClick","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8YAEMA,EAAYC,IAAUC,MAAM,CAChCC,GAAIF,IAAUG,OACdC,KAAMJ,IAAUK,OAChBC,MAAON,IAAUK,OACjBE,OAAQP,IAAUC,MAAM,CACtBO,OAAQR,IAAUK,OAClBI,MAAOT,IAAUK,OACjBK,KAAMV,IAAUK,SACfM,aACFA,WAEGC,EAAeZ,IAAUC,MAAM,CACnCY,KAAMb,IAAUK,OAChBC,MAAON,IAAUK,OACjBD,KAAMJ,IAAUK,SACfM,WCUYG,GDPPd,IAAUC,MAAMF,GAIfC,IAAUe,QACff,IAAUC,MAAM,CACde,OAAQhB,IAAUG,OAClBD,GAAIF,IAAUG,OACdc,MAAOjB,IAAUK,OACjBQ,KAAMb,IAAUK,SACfM,YACHA,WAIIX,IAAUC,MAAM,CACpBiB,KAAMlB,IAAUC,MAAMF,GAAWY,WACjCQ,SAAUnB,IAAUe,QAClBf,IAAUC,MAAMW,GAAcD,YAC9BA,aACDA,WAIOX,IAAUe,QAClBf,IAAUC,MAAM,CACdmB,OAAQpB,IAAUG,OAClBD,GAAIF,IAAUG,OACdC,KAAMJ,IAAUK,OAChBC,MAAON,IAAUK,OACjBQ,KAAMb,IAAUK,SACfM,YACHA,WAIOX,IAAUC,MAAMW,GAAcD,uBCpD5B,SAAAU,GAAA,IAAGjB,EAAHiB,EAAGjB,KAAME,EAATe,EAASf,MAAOgB,EAAhBD,EAAgBC,QAAhB,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,uBACCrB,GAGHmB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,wBACCnB,GAGFgB,GACCC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,2BADF,GAAAE,OAEML,EAAQZ,KAFd,MAAAiB,OAEuBL,EAAQd,OAF/B,MAAAmB,OAE0CL,EAAQb,WCLzCmB,eATC,SAAAP,GAAA,IAAGQ,EAAHR,EAAGQ,QAAH,OACdN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBG,EAAQhB,MACvCU,EAAAC,EAAAC,cAACK,EAAD,CAAMxB,MAAOuB,EAAQvB,MAAOF,KAAMyB,EAAQzB,UCO/B2B,EAVK,SAAAV,GAAA,IAAGF,EAAHE,EAAGF,SAAH,OAClBI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACXP,EAASa,IAAI,SAAAH,GAAO,OACnBN,EAAAC,EAAAC,cAACQ,EAAD,CAASJ,QAASA,EAASK,IAAKL,EAAQ3B,SCc/BiC,EAfF,SAAAd,GAAc,IAAXe,EAAWf,EAAXe,KACNlB,EAAmBkB,EAAnBlB,KAAMC,EAAaiB,EAAbjB,SAEd,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcU,EAAKnB,OACjCM,EAAAC,EAAAC,cAAA,WAAMW,EAAKvB,MACXU,EAAAC,EAAAC,cAACK,EAAD,CAAMxB,MAAOY,EAAKZ,MAAOF,KAAMc,EAAKd,KAAMkB,QAASJ,EAAKI,UACxDC,EAAAC,EAAAC,cAACY,EAAD,CAAalB,SAAUA,MCAdmB,SAVE,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,MAAH,OACfhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZa,EAAMP,IAAI,SAAAI,GAAI,OACbb,EAAAC,EAAAC,cAACe,EAAD,CAAMJ,KAAMA,EAAMF,IAAKE,EAAKlC,6jBCHlC,IAAMuC,EAAgB,6CAChBC,EAAmB,gDACnBC,EAAgB,6CAgGPC,6MA7FbC,MAAQ,CACNN,MAAO,GACPO,cAAe,GACfC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,WAAY,MAGdC,iCAAc,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlB,EAAAmB,EAAAvC,EAAAwC,EAAA,OAAAC,EAAApC,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZC,EAAKC,SAAS,CAAElB,WAAW,IADfc,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAQAG,QAAQC,IAAI,CACpBC,MAAM5B,GACN4B,MAAM1B,GACN0B,MAAM3B,KAXE,cAAAW,EAAAS,EAAAQ,KAAAhB,EAAAiB,OAAAC,EAAA,EAAAD,CAAAlB,EAAA,GAKRE,EALQD,EAAA,GAMRE,EANQF,EAAA,GAORG,EAPQH,EAAA,GAAAQ,EAAAE,KAAA,GAcUT,EAAckB,OAdxB,eAcJlC,EAdIuB,EAAAQ,KAAAR,EAAAE,KAAA,GAeUR,EAAciB,OAfxB,eAeJf,EAfII,EAAAQ,KAAAR,EAAAE,KAAA,GAgBaP,EAAiBgB,OAhB9B,QAgBJtD,EAhBI2C,EAAAQ,KAkBJX,EAAgBpB,EACnBP,IAAI,SAAAI,GAAI,OAAAsC,EAAA,GACJtC,EADI,CAEPlB,KAAMwC,EAAMiB,KAAK,SAAAzD,GAAI,OAAIA,EAAKhB,KAAOkC,EAAKpB,SAC1CG,SAAUA,EAASyD,OAAO,SAAA/C,GAAO,OAAIA,EAAQT,SAAWgB,EAAKlC,SAGjE+D,EAAKC,SAAS,CACZ3B,MAAOoB,EACPb,cAAea,EACfV,UAAU,IA5BFa,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SA+BVG,EAAKC,SAAS,CACZnB,UAAU,EACVC,WAAW,IAjCH,yBAAAc,EAAAgB,SAAA1B,EAAA,oBAsCd2B,kBAAoB,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OACrBhB,EAAKC,SAAS,CACZhB,WAAY+B,EAAOC,MACnB3C,MAAOgC,OAAAY,EAAA,EAAAZ,CAAIN,EAAKpB,MAAMC,eACnB8B,OAAO,SAAAQ,GAAA,OAAAA,EAAGnE,MAAkBoE,SAASpB,EAAKpB,MAAMK,mBAIvDoC,iBAAmB,WACjBrB,EAAKC,SAAS,SAAAqB,GAAS,MAAK,CAC1BhD,MAAMgC,OAAAY,EAAA,EAAAZ,CAAKgB,EAAUzC,2FAIhB,IAAA0C,EACsDC,KAAK5C,MAA1DN,EADDiD,EACCjD,MAAOU,EADRuC,EACQvC,SAAUD,EADlBwC,EACkBxC,UAAWD,EAD7ByC,EAC6BzC,SAAUG,EADvCsC,EACuCtC,WAE9C,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZuB,EACC1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkE,SAAA,KACEnE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,yBACAH,EAAAC,EAAAC,cAAA,mBAAWc,EAAMoD,QACjBpE,EAAAC,EAAAC,cAAA,SACEmE,KAAK,OACLC,SAAUJ,KAAKV,kBACfG,MAAOhC,EACPxB,UAAU,kBAEZH,EAAAC,EAAAC,cAACqE,EAAD,CAAUvD,MAAOA,KAGnBhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkE,SAAA,KACEnE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACXqB,EAAW,yBAA2B,cAEzCxB,EAAAC,EAAAC,cAAA,UAAQmE,KAAK,SAASG,QAASN,KAAKtC,aACjCH,EAAY,aAAeD,EAAW,YAAc,iBArFjDiD,aCLlBC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ba4f26b3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst userShape = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  adress: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n  }).isRequired,\n}).isRequired;\n\nconst commentShape = PropTypes.shape({\n  body: PropTypes.string,\n  email: PropTypes.string,\n  name: PropTypes.string,\n}).isRequired;\n\nexport const UserProps = {\n  user: PropTypes.shape(userShape),\n};\n\nexport const PostListProps = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      body: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const PostProps = {\n  post: PropTypes.shape({\n    user: PropTypes.shape(userShape).isRequired,\n    comments: PropTypes.arrayOf(\n      PropTypes.shape(commentShape).isRequired,\n    ).isRequired,\n  }).isRequired,\n};\n\nexport const CommentListProps = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      postId: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string,\n      email: PropTypes.string,\n      body: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const CommentProps = {\n  comment: PropTypes.shape(commentShape).isRequired,\n};\n","import React from 'react';\nimport { UserProps } from '../constants/PropTypes';\nimport './User.css';\n\nconst User = ({ name, email, address }) => (\n  <div className=\"user\">\n    <p>\n      <strong>Name:</strong>\n      {name}\n    </p>\n\n    <p>\n      <strong>Email:</strong>\n      {email}\n    </p>\n\n    {address && (\n      <p>\n        <strong>Address: </strong>\n        {`${address.city}, ${address.street}, ${address.suite}`}\n      </p>\n    )}\n  </div>\n);\n\nUser.propTypes = UserProps;\n\nexport default User;\n","import React from 'react';\nimport { CommentProps } from '../constants/PropTypes';\nimport './Comment.css';\nimport User from '../User/User';\n\nconst Comment = ({ comment }) => (\n  <li className=\"comment\">\n    <div className=\"comment-text\">{comment.body}</div>\n    <User email={comment.email} name={comment.name} />\n  </li>\n);\n\nComment.propTypes = CommentProps;\n\nexport default Comment;\n","import React from 'react';\nimport { CommentListProps } from '../constants/PropTypes';\nimport './CommentList.css';\nimport Comment from '../Comment/Comment';\n\nconst CommentList = ({ comments }) => (\n  <ul className=\"comment-list\">\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </ul>\n);\n\nCommentList.propTypes = CommentListProps;\n\nexport default CommentList;\n","import React from 'react';\nimport { PostProps } from '../constants/PropTypes';\nimport './Post.css';\n\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\n\nconst Post = ({ post }) => {\n  const { user, comments } = post;\n\n  return (\n    <div className=\"post\">\n      <h1 className=\"post-title\">{post.title}</h1>\n      <div>{post.body}</div>\n      <User email={user.email} name={user.name} address={user.address} />\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n\nPost.propTypes = PostProps;\n\nexport default Post;\n","import React from 'react';\nimport { PostListProps } from '../constants/PropTypes';\nimport Post from '../Post/Post';\nimport './PostList.css';\n\nconst PostList = ({ posts }) => (\n  <div className=\"post-list\">\n    {posts.map(post => (\n      <Post post={post} key={post.id} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = PostListProps;\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport PostList from './components/PostList/PostList';\n\nconst POSTS_API_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst COMMENTS_API_URL = 'https://jsonplaceholder.typicode.com/comments';\nconst USERS_API_URL = 'https://jsonplaceholder.typicode.com/users';\n\nclass App extends Component {\n  state = {\n    posts: [],\n    originalPosts: [],\n    hasError: false,\n    isLoading: false,\n    isLoaded: false,\n    inputValue: '',\n  }\n\n  handleClick = async() => {\n    this.setState({ isLoading: true });\n\n    try {\n      const [\n        postsResponse,\n        usersResponse,\n        commentsResponse,\n      ] = await Promise.all([\n        fetch(POSTS_API_URL),\n        fetch(USERS_API_URL),\n        fetch(COMMENTS_API_URL),\n      ]);\n\n      const posts = await postsResponse.json();\n      const users = await usersResponse.json();\n      const comments = await commentsResponse.json();\n\n      const preparedPosts = posts\n        .map(post => ({\n          ...post,\n          user: users.find(user => user.id === post.userId),\n          comments: comments.filter(comment => comment.postId === post.id),\n        }));\n\n      this.setState({\n        posts: preparedPosts,\n        originalPosts: preparedPosts,\n        isLoaded: true,\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true,\n        isLoading: false,\n      });\n    }\n  };\n\n  handleInputFilter = ({ target }) => {\n    this.setState({\n      inputValue: target.value,\n      posts: [...this.state.originalPosts]\n        .filter(({ title }) => title.includes(this.state.inputValue)),\n    });\n  }\n\n  handleResetPosts = () => {\n    this.setState(prevState => ({\n      posts: [...prevState.originalPosts],\n    }));\n  }\n\n  render() {\n    const { posts, isLoaded, isLoading, hasError, inputValue } = this.state;\n\n    return (\n      <div className=\"app\">\n        {isLoaded ? (\n          <>\n            <h1 className=\"title\">Dynamic list of posts</h1>\n            <p>Posts: {posts.length}</p>\n            <input\n              type=\"text\"\n              onChange={this.handleInputFilter}\n              value={inputValue}\n              className=\"filter__input\"\n            />\n            <PostList posts={posts} />\n          </>\n        ) : (\n          <>\n            <h1 className=\"title\">\n              {hasError ? 'Error: Failed to fetch' : 'Load Posts'}\n            </h1>\n            <button type=\"button\" onClick={this.handleClick}>\n              {isLoading ? 'Loading...' : hasError ? 'Try Again' : 'Load'}\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}